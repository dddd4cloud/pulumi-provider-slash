// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package api

import (
	"context"
	"reflect"

	"github.com/dddd4cloud/pulumi-provider-slash/sdk/go/slash/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupUserServiceUser(ctx *pulumi.Context, args *LookupUserServiceUserArgs, opts ...pulumi.InvokeOption) (*LookupUserServiceUserResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupUserServiceUserResult
	err := ctx.Invoke("slash:api:getUserServiceUser", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupUserServiceUserArgs struct {
	Id string `pulumi:"id"`
}

type LookupUserServiceUserResult struct {
	Items V1GetUserResponse `pulumi:"items"`
}

// Defaults sets the appropriate defaults for LookupUserServiceUserResult
func (val *LookupUserServiceUserResult) Defaults() *LookupUserServiceUserResult {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Items = *tmp.Items.Defaults()

	return &tmp
}

func LookupUserServiceUserOutput(ctx *pulumi.Context, args LookupUserServiceUserOutputArgs, opts ...pulumi.InvokeOption) LookupUserServiceUserResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupUserServiceUserResult, error) {
			args := v.(LookupUserServiceUserArgs)
			r, err := LookupUserServiceUser(ctx, &args, opts...)
			var s LookupUserServiceUserResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupUserServiceUserResultOutput)
}

type LookupUserServiceUserOutputArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupUserServiceUserOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUserServiceUserArgs)(nil)).Elem()
}

type LookupUserServiceUserResultOutput struct{ *pulumi.OutputState }

func (LookupUserServiceUserResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUserServiceUserResult)(nil)).Elem()
}

func (o LookupUserServiceUserResultOutput) ToLookupUserServiceUserResultOutput() LookupUserServiceUserResultOutput {
	return o
}

func (o LookupUserServiceUserResultOutput) ToLookupUserServiceUserResultOutputWithContext(ctx context.Context) LookupUserServiceUserResultOutput {
	return o
}

func (o LookupUserServiceUserResultOutput) Items() V1GetUserResponseOutput {
	return o.ApplyT(func(v LookupUserServiceUserResult) V1GetUserResponse { return v.Items }).(V1GetUserResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupUserServiceUserResultOutput{})
}
