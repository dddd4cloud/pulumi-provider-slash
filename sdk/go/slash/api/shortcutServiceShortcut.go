// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package api

import (
	"context"
	"reflect"

	"github.com/dddd4cloud/pulumi-provider-slash/sdk/go/slash/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ShortcutServiceShortcut struct {
	pulumi.CustomResourceState

	CreatedTime pulumi.StringPtrOutput          `pulumi:"createdTime"`
	CreatorId   pulumi.IntPtrOutput             `pulumi:"creatorId"`
	Description pulumi.StringPtrOutput          `pulumi:"description"`
	Link        pulumi.StringPtrOutput          `pulumi:"link"`
	Name        pulumi.StringPtrOutput          `pulumi:"name"`
	OgMetadata  Apiv1OpenGraphMetadataPtrOutput `pulumi:"ogMetadata"`
	RowStatus   RowStatusPtrOutput              `pulumi:"rowStatus"`
	Shortcut    Apiv1ShortcutPtrOutput          `pulumi:"shortcut"`
	Tags        pulumi.StringArrayOutput        `pulumi:"tags"`
	Title       pulumi.StringPtrOutput          `pulumi:"title"`
	UpdatedTime pulumi.StringPtrOutput          `pulumi:"updatedTime"`
	ViewCount   pulumi.IntPtrOutput             `pulumi:"viewCount"`
	Visibility  VisibilityPtrOutput             `pulumi:"visibility"`
}

// NewShortcutServiceShortcut registers a new resource with the given unique name, arguments, and options.
func NewShortcutServiceShortcut(ctx *pulumi.Context,
	name string, args *ShortcutServiceShortcutArgs, opts ...pulumi.ResourceOption) (*ShortcutServiceShortcut, error) {
	if args == nil {
		args = &ShortcutServiceShortcutArgs{}
	}

	if args.RowStatus == nil {
		args.RowStatus = RowStatus("ROW_STATUS_UNSPECIFIED")
	}
	if args.Visibility == nil {
		args.Visibility = Visibility("VISIBILITY_UNSPECIFIED")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ShortcutServiceShortcut
	err := ctx.RegisterResource("slash:api:ShortcutServiceShortcut", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetShortcutServiceShortcut gets an existing ShortcutServiceShortcut resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetShortcutServiceShortcut(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ShortcutServiceShortcutState, opts ...pulumi.ResourceOption) (*ShortcutServiceShortcut, error) {
	var resource ShortcutServiceShortcut
	err := ctx.ReadResource("slash:api:ShortcutServiceShortcut", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ShortcutServiceShortcut resources.
type shortcutServiceShortcutState struct {
}

type ShortcutServiceShortcutState struct {
}

func (ShortcutServiceShortcutState) ElementType() reflect.Type {
	return reflect.TypeOf((*shortcutServiceShortcutState)(nil)).Elem()
}

type shortcutServiceShortcutArgs struct {
	CreatedTime *string                 `pulumi:"createdTime"`
	CreatorId   *int                    `pulumi:"creatorId"`
	Description *string                 `pulumi:"description"`
	Link        *string                 `pulumi:"link"`
	Name        *string                 `pulumi:"name"`
	OgMetadata  *Apiv1OpenGraphMetadata `pulumi:"ogMetadata"`
	RowStatus   *RowStatus              `pulumi:"rowStatus"`
	Tags        []string                `pulumi:"tags"`
	Title       *string                 `pulumi:"title"`
	UpdatedTime *string                 `pulumi:"updatedTime"`
	ViewCount   *int                    `pulumi:"viewCount"`
	Visibility  *Visibility             `pulumi:"visibility"`
}

// The set of arguments for constructing a ShortcutServiceShortcut resource.
type ShortcutServiceShortcutArgs struct {
	CreatedTime pulumi.StringPtrInput
	CreatorId   pulumi.IntPtrInput
	Description pulumi.StringPtrInput
	Link        pulumi.StringPtrInput
	Name        pulumi.StringPtrInput
	OgMetadata  Apiv1OpenGraphMetadataPtrInput
	RowStatus   RowStatusPtrInput
	Tags        pulumi.StringArrayInput
	Title       pulumi.StringPtrInput
	UpdatedTime pulumi.StringPtrInput
	ViewCount   pulumi.IntPtrInput
	Visibility  VisibilityPtrInput
}

func (ShortcutServiceShortcutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*shortcutServiceShortcutArgs)(nil)).Elem()
}

type ShortcutServiceShortcutInput interface {
	pulumi.Input

	ToShortcutServiceShortcutOutput() ShortcutServiceShortcutOutput
	ToShortcutServiceShortcutOutputWithContext(ctx context.Context) ShortcutServiceShortcutOutput
}

func (*ShortcutServiceShortcut) ElementType() reflect.Type {
	return reflect.TypeOf((**ShortcutServiceShortcut)(nil)).Elem()
}

func (i *ShortcutServiceShortcut) ToShortcutServiceShortcutOutput() ShortcutServiceShortcutOutput {
	return i.ToShortcutServiceShortcutOutputWithContext(context.Background())
}

func (i *ShortcutServiceShortcut) ToShortcutServiceShortcutOutputWithContext(ctx context.Context) ShortcutServiceShortcutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShortcutServiceShortcutOutput)
}

type ShortcutServiceShortcutOutput struct{ *pulumi.OutputState }

func (ShortcutServiceShortcutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ShortcutServiceShortcut)(nil)).Elem()
}

func (o ShortcutServiceShortcutOutput) ToShortcutServiceShortcutOutput() ShortcutServiceShortcutOutput {
	return o
}

func (o ShortcutServiceShortcutOutput) ToShortcutServiceShortcutOutputWithContext(ctx context.Context) ShortcutServiceShortcutOutput {
	return o
}

func (o ShortcutServiceShortcutOutput) CreatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShortcutServiceShortcut) pulumi.StringPtrOutput { return v.CreatedTime }).(pulumi.StringPtrOutput)
}

func (o ShortcutServiceShortcutOutput) CreatorId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ShortcutServiceShortcut) pulumi.IntPtrOutput { return v.CreatorId }).(pulumi.IntPtrOutput)
}

func (o ShortcutServiceShortcutOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShortcutServiceShortcut) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ShortcutServiceShortcutOutput) Link() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShortcutServiceShortcut) pulumi.StringPtrOutput { return v.Link }).(pulumi.StringPtrOutput)
}

func (o ShortcutServiceShortcutOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShortcutServiceShortcut) pulumi.StringPtrOutput { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ShortcutServiceShortcutOutput) OgMetadata() Apiv1OpenGraphMetadataPtrOutput {
	return o.ApplyT(func(v *ShortcutServiceShortcut) Apiv1OpenGraphMetadataPtrOutput { return v.OgMetadata }).(Apiv1OpenGraphMetadataPtrOutput)
}

func (o ShortcutServiceShortcutOutput) RowStatus() RowStatusPtrOutput {
	return o.ApplyT(func(v *ShortcutServiceShortcut) RowStatusPtrOutput { return v.RowStatus }).(RowStatusPtrOutput)
}

func (o ShortcutServiceShortcutOutput) Shortcut() Apiv1ShortcutPtrOutput {
	return o.ApplyT(func(v *ShortcutServiceShortcut) Apiv1ShortcutPtrOutput { return v.Shortcut }).(Apiv1ShortcutPtrOutput)
}

func (o ShortcutServiceShortcutOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ShortcutServiceShortcut) pulumi.StringArrayOutput { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o ShortcutServiceShortcutOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShortcutServiceShortcut) pulumi.StringPtrOutput { return v.Title }).(pulumi.StringPtrOutput)
}

func (o ShortcutServiceShortcutOutput) UpdatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShortcutServiceShortcut) pulumi.StringPtrOutput { return v.UpdatedTime }).(pulumi.StringPtrOutput)
}

func (o ShortcutServiceShortcutOutput) ViewCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ShortcutServiceShortcut) pulumi.IntPtrOutput { return v.ViewCount }).(pulumi.IntPtrOutput)
}

func (o ShortcutServiceShortcutOutput) Visibility() VisibilityPtrOutput {
	return o.ApplyT(func(v *ShortcutServiceShortcut) VisibilityPtrOutput { return v.Visibility }).(VisibilityPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ShortcutServiceShortcutInput)(nil)).Elem(), &ShortcutServiceShortcut{})
	pulumi.RegisterOutputType(ShortcutServiceShortcutOutput{})
}
