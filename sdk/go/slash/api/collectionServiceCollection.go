// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package api

import (
	"context"
	"reflect"

	"github.com/dddd4cloud/pulumi-provider-slash/sdk/go/slash/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CollectionServiceCollection struct {
	pulumi.CustomResourceState

	Collection  Apiv1CollectionPtrOutput `pulumi:"collection"`
	CreatedTime pulumi.StringPtrOutput   `pulumi:"createdTime"`
	CreatorId   pulumi.IntPtrOutput      `pulumi:"creatorId"`
	Description pulumi.StringPtrOutput   `pulumi:"description"`
	Ids         pulumi.IntArrayOutput    `pulumi:"ids"`
	Name        pulumi.StringPtrOutput   `pulumi:"name"`
	Title       pulumi.StringPtrOutput   `pulumi:"title"`
	UpdatedTime pulumi.StringPtrOutput   `pulumi:"updatedTime"`
	Visibility  VisibilityPtrOutput      `pulumi:"visibility"`
}

// NewCollectionServiceCollection registers a new resource with the given unique name, arguments, and options.
func NewCollectionServiceCollection(ctx *pulumi.Context,
	name string, args *CollectionServiceCollectionArgs, opts ...pulumi.ResourceOption) (*CollectionServiceCollection, error) {
	if args == nil {
		args = &CollectionServiceCollectionArgs{}
	}

	if args.Visibility == nil {
		args.Visibility = Visibility("VISIBILITY_UNSPECIFIED")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CollectionServiceCollection
	err := ctx.RegisterResource("slash:api:CollectionServiceCollection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCollectionServiceCollection gets an existing CollectionServiceCollection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCollectionServiceCollection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CollectionServiceCollectionState, opts ...pulumi.ResourceOption) (*CollectionServiceCollection, error) {
	var resource CollectionServiceCollection
	err := ctx.ReadResource("slash:api:CollectionServiceCollection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CollectionServiceCollection resources.
type collectionServiceCollectionState struct {
}

type CollectionServiceCollectionState struct {
}

func (CollectionServiceCollectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*collectionServiceCollectionState)(nil)).Elem()
}

type collectionServiceCollectionArgs struct {
	CreatedTime *string     `pulumi:"createdTime"`
	CreatorId   *int        `pulumi:"creatorId"`
	Description *string     `pulumi:"description"`
	Ids         []int       `pulumi:"ids"`
	Name        *string     `pulumi:"name"`
	Title       *string     `pulumi:"title"`
	UpdatedTime *string     `pulumi:"updatedTime"`
	Visibility  *Visibility `pulumi:"visibility"`
}

// The set of arguments for constructing a CollectionServiceCollection resource.
type CollectionServiceCollectionArgs struct {
	CreatedTime pulumi.StringPtrInput
	CreatorId   pulumi.IntPtrInput
	Description pulumi.StringPtrInput
	Ids         pulumi.IntArrayInput
	Name        pulumi.StringPtrInput
	Title       pulumi.StringPtrInput
	UpdatedTime pulumi.StringPtrInput
	Visibility  VisibilityPtrInput
}

func (CollectionServiceCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*collectionServiceCollectionArgs)(nil)).Elem()
}

type CollectionServiceCollectionInput interface {
	pulumi.Input

	ToCollectionServiceCollectionOutput() CollectionServiceCollectionOutput
	ToCollectionServiceCollectionOutputWithContext(ctx context.Context) CollectionServiceCollectionOutput
}

func (*CollectionServiceCollection) ElementType() reflect.Type {
	return reflect.TypeOf((**CollectionServiceCollection)(nil)).Elem()
}

func (i *CollectionServiceCollection) ToCollectionServiceCollectionOutput() CollectionServiceCollectionOutput {
	return i.ToCollectionServiceCollectionOutputWithContext(context.Background())
}

func (i *CollectionServiceCollection) ToCollectionServiceCollectionOutputWithContext(ctx context.Context) CollectionServiceCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CollectionServiceCollectionOutput)
}

type CollectionServiceCollectionOutput struct{ *pulumi.OutputState }

func (CollectionServiceCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CollectionServiceCollection)(nil)).Elem()
}

func (o CollectionServiceCollectionOutput) ToCollectionServiceCollectionOutput() CollectionServiceCollectionOutput {
	return o
}

func (o CollectionServiceCollectionOutput) ToCollectionServiceCollectionOutputWithContext(ctx context.Context) CollectionServiceCollectionOutput {
	return o
}

func (o CollectionServiceCollectionOutput) Collection() Apiv1CollectionPtrOutput {
	return o.ApplyT(func(v *CollectionServiceCollection) Apiv1CollectionPtrOutput { return v.Collection }).(Apiv1CollectionPtrOutput)
}

func (o CollectionServiceCollectionOutput) CreatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CollectionServiceCollection) pulumi.StringPtrOutput { return v.CreatedTime }).(pulumi.StringPtrOutput)
}

func (o CollectionServiceCollectionOutput) CreatorId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CollectionServiceCollection) pulumi.IntPtrOutput { return v.CreatorId }).(pulumi.IntPtrOutput)
}

func (o CollectionServiceCollectionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CollectionServiceCollection) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o CollectionServiceCollectionOutput) Ids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *CollectionServiceCollection) pulumi.IntArrayOutput { return v.Ids }).(pulumi.IntArrayOutput)
}

func (o CollectionServiceCollectionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CollectionServiceCollection) pulumi.StringPtrOutput { return v.Name }).(pulumi.StringPtrOutput)
}

func (o CollectionServiceCollectionOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CollectionServiceCollection) pulumi.StringPtrOutput { return v.Title }).(pulumi.StringPtrOutput)
}

func (o CollectionServiceCollectionOutput) UpdatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CollectionServiceCollection) pulumi.StringPtrOutput { return v.UpdatedTime }).(pulumi.StringPtrOutput)
}

func (o CollectionServiceCollectionOutput) Visibility() VisibilityPtrOutput {
	return o.ApplyT(func(v *CollectionServiceCollection) VisibilityPtrOutput { return v.Visibility }).(VisibilityPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CollectionServiceCollectionInput)(nil)).Elem(), &CollectionServiceCollection{})
	pulumi.RegisterOutputType(CollectionServiceCollectionOutput{})
}
