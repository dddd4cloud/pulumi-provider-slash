// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/dddd4cloud/pulumi-provider-slash/sdk/go/slash/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetSubscriptionServiceSubscription(ctx *pulumi.Context, args *GetSubscriptionServiceSubscriptionArgs, opts ...pulumi.InvokeOption) (*GetSubscriptionServiceSubscriptionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSubscriptionServiceSubscriptionResult
	err := ctx.Invoke("slash:subscription/v1:getSubscriptionServiceSubscription", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type GetSubscriptionServiceSubscriptionArgs struct {
}

type GetSubscriptionServiceSubscriptionResult struct {
	Items V1GetSubscriptionResponse `pulumi:"items"`
}

// Defaults sets the appropriate defaults for GetSubscriptionServiceSubscriptionResult
func (val *GetSubscriptionServiceSubscriptionResult) Defaults() *GetSubscriptionServiceSubscriptionResult {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Items = *tmp.Items.Defaults()

	return &tmp
}

func GetSubscriptionServiceSubscriptionOutput(ctx *pulumi.Context, args GetSubscriptionServiceSubscriptionOutputArgs, opts ...pulumi.InvokeOption) GetSubscriptionServiceSubscriptionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSubscriptionServiceSubscriptionResult, error) {
			args := v.(GetSubscriptionServiceSubscriptionArgs)
			r, err := GetSubscriptionServiceSubscription(ctx, &args, opts...)
			var s GetSubscriptionServiceSubscriptionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSubscriptionServiceSubscriptionResultOutput)
}

type GetSubscriptionServiceSubscriptionOutputArgs struct {
}

func (GetSubscriptionServiceSubscriptionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionServiceSubscriptionArgs)(nil)).Elem()
}

type GetSubscriptionServiceSubscriptionResultOutput struct{ *pulumi.OutputState }

func (GetSubscriptionServiceSubscriptionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscriptionServiceSubscriptionResult)(nil)).Elem()
}

func (o GetSubscriptionServiceSubscriptionResultOutput) ToGetSubscriptionServiceSubscriptionResultOutput() GetSubscriptionServiceSubscriptionResultOutput {
	return o
}

func (o GetSubscriptionServiceSubscriptionResultOutput) ToGetSubscriptionServiceSubscriptionResultOutputWithContext(ctx context.Context) GetSubscriptionServiceSubscriptionResultOutput {
	return o
}

func (o GetSubscriptionServiceSubscriptionResultOutput) Items() V1GetSubscriptionResponseOutput {
	return o.ApplyT(func(v GetSubscriptionServiceSubscriptionResult) V1GetSubscriptionResponse { return v.Items }).(V1GetSubscriptionResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSubscriptionServiceSubscriptionResultOutput{})
}
