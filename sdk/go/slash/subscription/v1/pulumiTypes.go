// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/dddd4cloud/pulumi-provider-slash/sdk/go/slash/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type V1GetSubscriptionResponse struct {
	Subscription *V1Subscription `pulumi:"subscription"`
}

// Defaults sets the appropriate defaults for V1GetSubscriptionResponse
func (val *V1GetSubscriptionResponse) Defaults() *V1GetSubscriptionResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Subscription = tmp.Subscription.Defaults()

	return &tmp
}

type V1GetSubscriptionResponseOutput struct{ *pulumi.OutputState }

func (V1GetSubscriptionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*V1GetSubscriptionResponse)(nil)).Elem()
}

func (o V1GetSubscriptionResponseOutput) ToV1GetSubscriptionResponseOutput() V1GetSubscriptionResponseOutput {
	return o
}

func (o V1GetSubscriptionResponseOutput) ToV1GetSubscriptionResponseOutputWithContext(ctx context.Context) V1GetSubscriptionResponseOutput {
	return o
}

func (o V1GetSubscriptionResponseOutput) Subscription() V1SubscriptionPtrOutput {
	return o.ApplyT(func(v V1GetSubscriptionResponse) *V1Subscription { return v.Subscription }).(V1SubscriptionPtrOutput)
}

type V1Subscription struct {
	ExpiresTime *string             `pulumi:"expiresTime"`
	Plan        *V1SubscriptionPlan `pulumi:"plan"`
	StartedTime *string             `pulumi:"startedTime"`
}

// Defaults sets the appropriate defaults for V1Subscription
func (val *V1Subscription) Defaults() *V1Subscription {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Plan == nil {
		plan_ := V1SubscriptionPlan("PLAN_TYPE_UNSPECIFIED")
		tmp.Plan = &plan_
	}
	return &tmp
}

type V1SubscriptionOutput struct{ *pulumi.OutputState }

func (V1SubscriptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*V1Subscription)(nil)).Elem()
}

func (o V1SubscriptionOutput) ToV1SubscriptionOutput() V1SubscriptionOutput {
	return o
}

func (o V1SubscriptionOutput) ToV1SubscriptionOutputWithContext(ctx context.Context) V1SubscriptionOutput {
	return o
}

func (o V1SubscriptionOutput) ExpiresTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v V1Subscription) *string { return v.ExpiresTime }).(pulumi.StringPtrOutput)
}

func (o V1SubscriptionOutput) Plan() V1SubscriptionPlanPtrOutput {
	return o.ApplyT(func(v V1Subscription) *V1SubscriptionPlan { return v.Plan }).(V1SubscriptionPlanPtrOutput)
}

func (o V1SubscriptionOutput) StartedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v V1Subscription) *string { return v.StartedTime }).(pulumi.StringPtrOutput)
}

type V1SubscriptionPtrOutput struct{ *pulumi.OutputState }

func (V1SubscriptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**V1Subscription)(nil)).Elem()
}

func (o V1SubscriptionPtrOutput) ToV1SubscriptionPtrOutput() V1SubscriptionPtrOutput {
	return o
}

func (o V1SubscriptionPtrOutput) ToV1SubscriptionPtrOutputWithContext(ctx context.Context) V1SubscriptionPtrOutput {
	return o
}

func (o V1SubscriptionPtrOutput) Elem() V1SubscriptionOutput {
	return o.ApplyT(func(v *V1Subscription) V1Subscription {
		if v != nil {
			return *v
		}
		var ret V1Subscription
		return ret
	}).(V1SubscriptionOutput)
}

func (o V1SubscriptionPtrOutput) ExpiresTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *V1Subscription) *string {
		if v == nil {
			return nil
		}
		return v.ExpiresTime
	}).(pulumi.StringPtrOutput)
}

func (o V1SubscriptionPtrOutput) Plan() V1SubscriptionPlanPtrOutput {
	return o.ApplyT(func(v *V1Subscription) *V1SubscriptionPlan {
		if v == nil {
			return nil
		}
		return v.Plan
	}).(V1SubscriptionPlanPtrOutput)
}

func (o V1SubscriptionPtrOutput) StartedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *V1Subscription) *string {
		if v == nil {
			return nil
		}
		return v.StartedTime
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(V1GetSubscriptionResponseOutput{})
	pulumi.RegisterOutputType(V1SubscriptionOutput{})
	pulumi.RegisterOutputType(V1SubscriptionPtrOutput{})
}
