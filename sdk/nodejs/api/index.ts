// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { CollectionServiceCollectionArgs } from "./collectionServiceCollection";
export type CollectionServiceCollection = import("./collectionServiceCollection").CollectionServiceCollection;
export const CollectionServiceCollection: typeof import("./collectionServiceCollection").CollectionServiceCollection = null as any;
utilities.lazyLoad(exports, ["CollectionServiceCollection"], () => require("./collectionServiceCollection"));

export { GetCollectionServiceCollectionArgs, GetCollectionServiceCollectionResult, GetCollectionServiceCollectionOutputArgs } from "./getCollectionServiceCollection";
export const getCollectionServiceCollection: typeof import("./getCollectionServiceCollection").getCollectionServiceCollection = null as any;
export const getCollectionServiceCollectionOutput: typeof import("./getCollectionServiceCollection").getCollectionServiceCollectionOutput = null as any;
utilities.lazyLoad(exports, ["getCollectionServiceCollection","getCollectionServiceCollectionOutput"], () => require("./getCollectionServiceCollection"));

export { GetShortcutServiceShortcutArgs, GetShortcutServiceShortcutResult, GetShortcutServiceShortcutOutputArgs } from "./getShortcutServiceShortcut";
export const getShortcutServiceShortcut: typeof import("./getShortcutServiceShortcut").getShortcutServiceShortcut = null as any;
export const getShortcutServiceShortcutOutput: typeof import("./getShortcutServiceShortcut").getShortcutServiceShortcutOutput = null as any;
utilities.lazyLoad(exports, ["getShortcutServiceShortcut","getShortcutServiceShortcutOutput"], () => require("./getShortcutServiceShortcut"));

export { GetUserServiceUserArgs, GetUserServiceUserResult, GetUserServiceUserOutputArgs } from "./getUserServiceUser";
export const getUserServiceUser: typeof import("./getUserServiceUser").getUserServiceUser = null as any;
export const getUserServiceUserOutput: typeof import("./getUserServiceUser").getUserServiceUserOutput = null as any;
utilities.lazyLoad(exports, ["getUserServiceUser","getUserServiceUserOutput"], () => require("./getUserServiceUser"));

export { GetUserSettingServiceUserSettingArgs, GetUserSettingServiceUserSettingResult, GetUserSettingServiceUserSettingOutputArgs } from "./getUserSettingServiceUserSetting";
export const getUserSettingServiceUserSetting: typeof import("./getUserSettingServiceUserSetting").getUserSettingServiceUserSetting = null as any;
export const getUserSettingServiceUserSettingOutput: typeof import("./getUserSettingServiceUserSetting").getUserSettingServiceUserSettingOutput = null as any;
utilities.lazyLoad(exports, ["getUserSettingServiceUserSetting","getUserSettingServiceUserSettingOutput"], () => require("./getUserSettingServiceUserSetting"));

export { GetWorkspaceServiceWorkspaceProfileArgs, GetWorkspaceServiceWorkspaceProfileResult } from "./getWorkspaceServiceWorkspaceProfile";
export const getWorkspaceServiceWorkspaceProfile: typeof import("./getWorkspaceServiceWorkspaceProfile").getWorkspaceServiceWorkspaceProfile = null as any;
export const getWorkspaceServiceWorkspaceProfileOutput: typeof import("./getWorkspaceServiceWorkspaceProfile").getWorkspaceServiceWorkspaceProfileOutput = null as any;
utilities.lazyLoad(exports, ["getWorkspaceServiceWorkspaceProfile","getWorkspaceServiceWorkspaceProfileOutput"], () => require("./getWorkspaceServiceWorkspaceProfile"));

export { GetWorkspaceServiceWorkspaceSettingArgs, GetWorkspaceServiceWorkspaceSettingResult } from "./getWorkspaceServiceWorkspaceSetting";
export const getWorkspaceServiceWorkspaceSetting: typeof import("./getWorkspaceServiceWorkspaceSetting").getWorkspaceServiceWorkspaceSetting = null as any;
export const getWorkspaceServiceWorkspaceSettingOutput: typeof import("./getWorkspaceServiceWorkspaceSetting").getWorkspaceServiceWorkspaceSettingOutput = null as any;
utilities.lazyLoad(exports, ["getWorkspaceServiceWorkspaceSetting","getWorkspaceServiceWorkspaceSettingOutput"], () => require("./getWorkspaceServiceWorkspaceSetting"));

export { ListCollectionServiceCollectionsArgs, ListCollectionServiceCollectionsResult } from "./listCollectionServiceCollections";
export const listCollectionServiceCollections: typeof import("./listCollectionServiceCollections").listCollectionServiceCollections = null as any;
export const listCollectionServiceCollectionsOutput: typeof import("./listCollectionServiceCollections").listCollectionServiceCollectionsOutput = null as any;
utilities.lazyLoad(exports, ["listCollectionServiceCollections","listCollectionServiceCollectionsOutput"], () => require("./listCollectionServiceCollections"));

export { ListShortcutServiceShortcutsArgs, ListShortcutServiceShortcutsResult } from "./listShortcutServiceShortcuts";
export const listShortcutServiceShortcuts: typeof import("./listShortcutServiceShortcuts").listShortcutServiceShortcuts = null as any;
export const listShortcutServiceShortcutsOutput: typeof import("./listShortcutServiceShortcuts").listShortcutServiceShortcutsOutput = null as any;
utilities.lazyLoad(exports, ["listShortcutServiceShortcuts","listShortcutServiceShortcutsOutput"], () => require("./listShortcutServiceShortcuts"));

export { ListUserServiceUserAccessTokensArgs, ListUserServiceUserAccessTokensResult, ListUserServiceUserAccessTokensOutputArgs } from "./listUserServiceUserAccessTokens";
export const listUserServiceUserAccessTokens: typeof import("./listUserServiceUserAccessTokens").listUserServiceUserAccessTokens = null as any;
export const listUserServiceUserAccessTokensOutput: typeof import("./listUserServiceUserAccessTokens").listUserServiceUserAccessTokensOutput = null as any;
utilities.lazyLoad(exports, ["listUserServiceUserAccessTokens","listUserServiceUserAccessTokensOutput"], () => require("./listUserServiceUserAccessTokens"));

export { ListUserServiceUsersArgs, ListUserServiceUsersResult } from "./listUserServiceUsers";
export const listUserServiceUsers: typeof import("./listUserServiceUsers").listUserServiceUsers = null as any;
export const listUserServiceUsersOutput: typeof import("./listUserServiceUsers").listUserServiceUsersOutput = null as any;
utilities.lazyLoad(exports, ["listUserServiceUsers","listUserServiceUsersOutput"], () => require("./listUserServiceUsers"));

export { ShortcutServiceShortcutArgs } from "./shortcutServiceShortcut";
export type ShortcutServiceShortcut = import("./shortcutServiceShortcut").ShortcutServiceShortcut;
export const ShortcutServiceShortcut: typeof import("./shortcutServiceShortcut").ShortcutServiceShortcut = null as any;
utilities.lazyLoad(exports, ["ShortcutServiceShortcut"], () => require("./shortcutServiceShortcut"));

export { UserServiceUserArgs } from "./userServiceUser";
export type UserServiceUser = import("./userServiceUser").UserServiceUser;
export const UserServiceUser: typeof import("./userServiceUser").UserServiceUser = null as any;
utilities.lazyLoad(exports, ["UserServiceUser"], () => require("./userServiceUser"));

export { UserServiceUserAccessTokenArgs } from "./userServiceUserAccessToken";
export type UserServiceUserAccessToken = import("./userServiceUserAccessToken").UserServiceUserAccessToken;
export const UserServiceUserAccessToken: typeof import("./userServiceUserAccessToken").UserServiceUserAccessToken = null as any;
utilities.lazyLoad(exports, ["UserServiceUserAccessToken"], () => require("./userServiceUserAccessToken"));


// Export enums:
export * from "../types/enums/api";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "slash:api:CollectionServiceCollection":
                return new CollectionServiceCollection(name, <any>undefined, { urn })
            case "slash:api:ShortcutServiceShortcut":
                return new ShortcutServiceShortcut(name, <any>undefined, { urn })
            case "slash:api:UserServiceUser":
                return new UserServiceUser(name, <any>undefined, { urn })
            case "slash:api:UserServiceUserAccessToken":
                return new UserServiceUserAccessToken(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("slash", "api", _module)
