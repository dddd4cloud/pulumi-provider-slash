// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export function getUserServiceUser(args: GetUserServiceUserArgs, opts?: pulumi.InvokeOptions): Promise<GetUserServiceUserResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("slash:api:getUserServiceUser", {
        "id": args.id,
    }, opts);
}

export interface GetUserServiceUserArgs {
    id: string;
}

export interface GetUserServiceUserResult {
    readonly items: outputs.api.V1GetUserResponse;
}
export function getUserServiceUserOutput(args: GetUserServiceUserOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUserServiceUserResult> {
    return pulumi.output(args).apply((a: any) => getUserServiceUser(a, opts))
}

export interface GetUserServiceUserOutputArgs {
    id: pulumi.Input<string>;
}
