// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export class UserServiceUser extends pulumi.CustomResource {
    /**
     * Get an existing UserServiceUser resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): UserServiceUser {
        return new UserServiceUser(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'slash:api:UserServiceUser';

    /**
     * Returns true if the given object is an instance of UserServiceUser.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is UserServiceUser {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === UserServiceUser.__pulumiType;
    }

    public readonly createdTime!: pulumi.Output<string | undefined>;
    public readonly email!: pulumi.Output<string | undefined>;
    public readonly nickname!: pulumi.Output<string | undefined>;
    public readonly password!: pulumi.Output<string | undefined>;
    public readonly role!: pulumi.Output<enums.api.Role | undefined>;
    public readonly rowStatus!: pulumi.Output<enums.api.RowStatus | undefined>;
    public readonly updatedTime!: pulumi.Output<string | undefined>;
    public /*out*/ readonly user!: pulumi.Output<outputs.api.V1User | undefined>;

    /**
     * Create a UserServiceUser resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: UserServiceUserArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["createdTime"] = args ? args.createdTime : undefined;
            resourceInputs["email"] = args ? args.email : undefined;
            resourceInputs["nickname"] = args ? args.nickname : undefined;
            resourceInputs["password"] = args ? args.password : undefined;
            resourceInputs["role"] = (args ? args.role : undefined) ?? "ROLE_UNSPECIFIED";
            resourceInputs["rowStatus"] = (args ? args.rowStatus : undefined) ?? "ROW_STATUS_UNSPECIFIED";
            resourceInputs["updatedTime"] = args ? args.updatedTime : undefined;
            resourceInputs["user"] = undefined /*out*/;
        } else {
            resourceInputs["createdTime"] = undefined /*out*/;
            resourceInputs["email"] = undefined /*out*/;
            resourceInputs["nickname"] = undefined /*out*/;
            resourceInputs["password"] = undefined /*out*/;
            resourceInputs["role"] = undefined /*out*/;
            resourceInputs["rowStatus"] = undefined /*out*/;
            resourceInputs["updatedTime"] = undefined /*out*/;
            resourceInputs["user"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(UserServiceUser.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a UserServiceUser resource.
 */
export interface UserServiceUserArgs {
    createdTime?: pulumi.Input<string>;
    email?: pulumi.Input<string>;
    nickname?: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    role?: pulumi.Input<enums.api.Role>;
    rowStatus?: pulumi.Input<enums.api.RowStatus>;
    updatedTime?: pulumi.Input<string>;
}
