// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export class ShortcutServiceShortcut extends pulumi.CustomResource {
    /**
     * Get an existing ShortcutServiceShortcut resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ShortcutServiceShortcut {
        return new ShortcutServiceShortcut(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'slash:api:ShortcutServiceShortcut';

    /**
     * Returns true if the given object is an instance of ShortcutServiceShortcut.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ShortcutServiceShortcut {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ShortcutServiceShortcut.__pulumiType;
    }

    public readonly createdTime!: pulumi.Output<string | undefined>;
    public readonly creatorId!: pulumi.Output<number | undefined>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly link!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string | undefined>;
    public readonly ogMetadata!: pulumi.Output<outputs.api.Apiv1OpenGraphMetadata | undefined>;
    public readonly rowStatus!: pulumi.Output<enums.api.RowStatus | undefined>;
    public /*out*/ readonly shortcut!: pulumi.Output<outputs.api.Apiv1Shortcut | undefined>;
    public readonly tags!: pulumi.Output<string[] | undefined>;
    public readonly title!: pulumi.Output<string | undefined>;
    public readonly updatedTime!: pulumi.Output<string | undefined>;
    public readonly viewCount!: pulumi.Output<number | undefined>;
    public readonly visibility!: pulumi.Output<enums.api.Visibility | undefined>;

    /**
     * Create a ShortcutServiceShortcut resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ShortcutServiceShortcutArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["createdTime"] = args ? args.createdTime : undefined;
            resourceInputs["creatorId"] = args ? args.creatorId : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["link"] = args ? args.link : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["ogMetadata"] = args ? args.ogMetadata : undefined;
            resourceInputs["rowStatus"] = (args ? args.rowStatus : undefined) ?? "ROW_STATUS_UNSPECIFIED";
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["title"] = args ? args.title : undefined;
            resourceInputs["updatedTime"] = args ? args.updatedTime : undefined;
            resourceInputs["viewCount"] = args ? args.viewCount : undefined;
            resourceInputs["visibility"] = (args ? args.visibility : undefined) ?? "VISIBILITY_UNSPECIFIED";
            resourceInputs["shortcut"] = undefined /*out*/;
        } else {
            resourceInputs["createdTime"] = undefined /*out*/;
            resourceInputs["creatorId"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["link"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["ogMetadata"] = undefined /*out*/;
            resourceInputs["rowStatus"] = undefined /*out*/;
            resourceInputs["shortcut"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["title"] = undefined /*out*/;
            resourceInputs["updatedTime"] = undefined /*out*/;
            resourceInputs["viewCount"] = undefined /*out*/;
            resourceInputs["visibility"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ShortcutServiceShortcut.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a ShortcutServiceShortcut resource.
 */
export interface ShortcutServiceShortcutArgs {
    createdTime?: pulumi.Input<string>;
    creatorId?: pulumi.Input<number>;
    description?: pulumi.Input<string>;
    link?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    ogMetadata?: pulumi.Input<inputs.api.Apiv1OpenGraphMetadataArgs>;
    rowStatus?: pulumi.Input<enums.api.RowStatus>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    title?: pulumi.Input<string>;
    updatedTime?: pulumi.Input<string>;
    viewCount?: pulumi.Input<number>;
    visibility?: pulumi.Input<enums.api.Visibility>;
}
