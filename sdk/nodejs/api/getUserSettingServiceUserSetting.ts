// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export function getUserSettingServiceUserSetting(args: GetUserSettingServiceUserSettingArgs, opts?: pulumi.InvokeOptions): Promise<GetUserSettingServiceUserSettingResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("slash:api:getUserSettingServiceUserSetting", {
        "id": args.id,
    }, opts);
}

export interface GetUserSettingServiceUserSettingArgs {
    /**
     * id is the user id.
     */
    id: string;
}

export interface GetUserSettingServiceUserSettingResult {
    readonly items: outputs.api.V1GetUserSettingResponse;
}
export function getUserSettingServiceUserSettingOutput(args: GetUserSettingServiceUserSettingOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUserSettingServiceUserSettingResult> {
    return pulumi.output(args).apply((a: any) => getUserSettingServiceUserSetting(a, opts))
}

export interface GetUserSettingServiceUserSettingOutputArgs {
    /**
     * id is the user id.
     */
    id: pulumi.Input<string>;
}
