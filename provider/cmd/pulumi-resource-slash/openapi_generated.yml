openapi: 3.1.0
components:
  schemas:
    GetShortcutAnalyticsResponseAnalyticsItem:
      properties:
        count:
          format: int32
          type: integer
        name:
          type: string
      type: object
    UserServiceCreateUserAccessTokenBody:
      properties:
        description:
          description: description is the description of the access token.
          type: string
        expiresAt:
          description: |-
            expires_at is the expiration time of the access token.
            If expires_at is not set, the access token will never expire.
          format: date-time
          type: string
      type: object
    UserSettingColorTheme:
      default: COLOR_THEME_UNSPECIFIED
      enum:
        - COLOR_THEME_UNSPECIFIED
        - COLOR_THEME_SYSTEM
        - COLOR_THEME_LIGHT
        - COLOR_THEME_DARK
      type: string
    UserSettingLocale:
      default: LOCALE_UNSPECIFIED
      enum:
        - LOCALE_UNSPECIFIED
        - LOCALE_EN
        - LOCALE_ZH
        - LOCALE_FR
      type: string
    apiv1AutoBackupWorkspaceSetting:
      properties:
        cronExpression:
          description: |-
            The cron expression for auto backup.
            For example, "0 0 0 * * *" means backup at 00:00:00 every day.
            See https://en.wikipedia.org/wiki/Cron for more details.
          type: string
        enabled:
          description: Whether auto backup is enabled.
          type: boolean
        maxKeep:
          description: The maximum number of backups to keep.
          format: int32
          type: integer
      type: object
    apiv1Collection:
      properties:
        createdTime:
          format: date-time
          type: string
        creatorId:
          format: int32
          type: integer
        description:
          type: string
        id:
          format: int32
          type: integer
        ids:
          items:
            format: int32
            type: integer
          type: array
        name:
          type: string
        title:
          type: string
        updatedTime:
          format: date-time
          type: string
        visibility:
          $ref: "#/components/schemas/apiv1Visibility"
      type: object
    apiv1OpenGraphMetadata:
      properties:
        description:
          type: string
        image:
          type: string
        title:
          type: string
      type: object
    apiv1RowStatus:
      default: ROW_STATUS_UNSPECIFIED
      enum:
        - ROW_STATUS_UNSPECIFIED
        - NORMAL
        - ARCHIVED
      type: string
    apiv1Shortcut:
      properties:
        createdTime:
          format: date-time
          type: string
        creatorId:
          format: int32
          type: integer
        description:
          type: string
        id:
          format: int32
          type: integer
        link:
          type: string
        name:
          type: string
        ogMetadata:
          $ref: "#/components/schemas/apiv1OpenGraphMetadata"
        rowStatus:
          $ref: "#/components/schemas/apiv1RowStatus"
        tags:
          items:
            type: string
          type: array
        title:
          type: string
        updatedTime:
          format: date-time
          type: string
        viewCount:
          format: int32
          type: integer
        visibility:
          $ref: "#/components/schemas/apiv1Visibility"
      type: object
    apiv1UserSetting:
      properties:
        colorTheme:
          $ref: "#/components/schemas/UserSettingColorTheme"
        id:
          description: id is the user id.
          format: int32
          type: integer
        locale:
          $ref: "#/components/schemas/UserSettingLocale"
      type: object
    apiv1Visibility:
      default: VISIBILITY_UNSPECIFIED
      enum:
        - VISIBILITY_UNSPECIFIED
        - PRIVATE
        - WORKSPACE
        - PUBLIC
      type: string
    apiv1WorkspaceSetting:
      properties:
        autoBackup:
          $ref: "#/components/schemas/apiv1AutoBackupWorkspaceSetting"
        customScript:
          description: The custom script.
          type: string
        customStyle:
          description: The custom style.
          type: string
        defaultVisibility:
          $ref: "#/components/schemas/apiv1Visibility"
        enableSignup:
          description: Whether to enable other users to sign up.
          type: boolean
        faviconProvider:
          description: The url of custom favicon provider.
          type: string
        instanceUrl:
          description: The instance URL.
          type: string
        licenseKey:
          type: string
      type: object
    protobufAny:
      additionalProperties:
        type: object
      properties:
        "@type":
          type: string
      type: object
    rpcStatus:
      properties:
        code:
          format: int32
          type: integer
        details:
          items:
            $ref: "#/components/schemas/protobufAny"
          type: array
        message:
          type: string
      type: object
    v1CreateCollectionResponse:
      properties:
        collection:
          $ref: "#/components/schemas/apiv1Collection"
      type: object
    v1CreateShortcutResponse:
      properties:
        shortcut:
          $ref: "#/components/schemas/apiv1Shortcut"
      type: object
    v1CreateUserAccessTokenResponse:
      properties:
        accessToken:
          $ref: "#/components/schemas/v1UserAccessToken"
      type: object
    v1CreateUserResponse:
      properties:
        user:
          $ref: "#/components/schemas/v1User"
      type: object
    v1DeleteCollectionResponse:
      type: object
    v1DeleteShortcutResponse:
      type: object
    v1DeleteUserAccessTokenResponse:
      type: object
    v1DeleteUserResponse:
      type: object
    v1GetCollectionResponse:
      properties:
        collection:
          $ref: "#/components/schemas/apiv1Collection"
      type: object
    v1GetShortcutAnalyticsResponse:
      properties:
        browsers:
          items:
            $ref: "#/components/schemas/GetShortcutAnalyticsResponseAnalyticsItem"
          type: array
        devices:
          items:
            $ref: "#/components/schemas/GetShortcutAnalyticsResponseAnalyticsItem"
          type: array
        references:
          items:
            $ref: "#/components/schemas/GetShortcutAnalyticsResponseAnalyticsItem"
          type: array
      type: object
    v1GetShortcutResponse:
      properties:
        shortcut:
          $ref: "#/components/schemas/apiv1Shortcut"
      type: object
    v1GetSubscriptionResponse:
      properties:
        subscription:
          $ref: "#/components/schemas/v1Subscription"
      type: object
    v1GetUserResponse:
      properties:
        user:
          $ref: "#/components/schemas/v1User"
      type: object
    v1GetUserSettingResponse:
      properties:
        userSetting:
          $ref: "#/components/schemas/apiv1UserSetting"
      type: object
    v1GetWorkspaceProfileResponse:
      properties:
        profile:
          $ref: "#/components/schemas/v1WorkspaceProfile"
      type: object
    v1GetWorkspaceSettingResponse:
      properties:
        setting:
          $ref: "#/components/schemas/apiv1WorkspaceSetting"
      type: object
    v1ListCollectionsResponse:
      properties:
        collections:
          items:
            $ref: "#/components/schemas/apiv1Collection"
          type: array
      type: object
    v1ListShortcutsResponse:
      properties:
        shortcuts:
          items:
            $ref: "#/components/schemas/apiv1Shortcut"
          type: array
      type: object
    v1ListUserAccessTokensResponse:
      properties:
        accessTokens:
          items:
            $ref: "#/components/schemas/v1UserAccessToken"
          type: array
      type: object
    v1ListUsersResponse:
      properties:
        users:
          items:
            $ref: "#/components/schemas/v1User"
          type: array
      type: object
    v1PlanType:
      default: PLAN_TYPE_UNSPECIFIED
      enum:
        - PLAN_TYPE_UNSPECIFIED
        - FREE
        - PRO
      type: string
    v1Role:
      default: ROLE_UNSPECIFIED
      enum:
        - ROLE_UNSPECIFIED
        - ADMIN
        - USER
      type: string
    v1Subscription:
      properties:
        expiresTime:
          format: date-time
          readOnly: true
          type: string
        plan:
          $ref: "#/components/schemas/v1PlanType"
        startedTime:
          format: date-time
          readOnly: true
          type: string
      type: object
    v1UpdateCollectionResponse:
      properties:
        collection:
          $ref: "#/components/schemas/apiv1Collection"
      type: object
    v1UpdateShortcutResponse:
      properties:
        shortcut:
          $ref: "#/components/schemas/apiv1Shortcut"
      type: object
    v1UpdateSubscriptionRequest:
      properties:
        licenseKey:
          type: string
      required:
        - licenseKey
      type: object
    v1UpdateSubscriptionResponse:
      properties:
        subscription:
          $ref: "#/components/schemas/v1Subscription"
      type: object
    v1UpdateUserResponse:
      properties:
        user:
          $ref: "#/components/schemas/v1User"
      type: object
    v1UpdateUserSettingResponse:
      properties:
        userSetting:
          $ref: "#/components/schemas/apiv1UserSetting"
      type: object
    v1UpdateWorkspaceSettingResponse:
      properties:
        setting:
          $ref: "#/components/schemas/apiv1WorkspaceSetting"
      type: object
    v1User:
      properties:
        createdTime:
          format: date-time
          type: string
        email:
          type: string
        id:
          format: int32
          type: integer
        nickname:
          type: string
        password:
          type: string
        role:
          $ref: "#/components/schemas/v1Role"
        rowStatus:
          $ref: "#/components/schemas/apiv1RowStatus"
        updatedTime:
          format: date-time
          type: string
      type: object
    v1UserAccessToken:
      properties:
        accessToken:
          type: string
        description:
          type: string
        expiresAt:
          format: date-time
          type: string
        issuedAt:
          format: date-time
          type: string
      type: object
    v1WorkspaceProfile:
      properties:
        customScript:
          description: The custom script.
          type: string
        customStyle:
          description: The custom style.
          type: string
        enableSignup:
          description: Whether to enable other users to sign up.
          type: boolean
        faviconProvider:
          description: The url of custom favicon provider.
          type: string
        mode:
          description: "Current workspace mode: dev, prod."
          type: string
        owner:
          title: |-
            The owner name.
            Format: "users/{id}"
          type: string
        plan:
          $ref: "#/components/schemas/v1PlanType"
        version:
          description: Current workspace version.
          type: string
      type: object
  securitySchemes:
    bearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
info:
  title: slash
  version: 1.0.0
paths:
  /api/v1/collections:
    get:
      operationId: CollectionService_ListCollections
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ListCollectionsResponse"
          description: A successful response.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
          description: An unexpected error response.
      summary: ListCollections returns a list of collections.
      tags:
        - CollectionService
    post:
      operationId: CollectionService_CreateCollection
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/apiv1Collection"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1CreateCollectionResponse"
          description: A successful response.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
          description: An unexpected error response.
      summary: CreateCollection creates a collection.
      tags:
        - CollectionService
      x-codegen-request-body-name: collection
  /api/v1/collections/{id}:
    delete:
      operationId: CollectionService_DeleteCollection
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1DeleteCollectionResponse"
          description: A successful response.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
          description: An unexpected error response.
      summary: DeleteCollection deletes a collection by id.
      tags:
        - CollectionService
    get:
      operationId: CollectionService_GetCollection
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1GetCollectionResponse"
          description: A successful response.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
          description: An unexpected error response.
      summary: GetCollection returns a collection by id.
      tags:
        - CollectionService
    put:
      operationId: CollectionService_UpdateCollection
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
        - in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                createdTime:
                  format: date-time
                  type: string
                creatorId:
                  format: int32
                  type: integer
                description:
                  type: string
                ids:
                  items:
                    format: int32
                    type: integer
                  type: array
                name:
                  type: string
                title:
                  type: string
                updatedTime:
                  format: date-time
                  type: string
                visibility:
                  $ref: "#/components/schemas/apiv1Visibility"
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1UpdateCollectionResponse"
          description: A successful response.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
          description: An unexpected error response.
      summary: UpdateCollection updates a collection.
      tags:
        - CollectionService
      x-codegen-request-body-name: collection
  /api/v1/shortcuts:
    get:
      operationId: ShortcutService_ListShortcuts
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ListShortcutsResponse"
          description: A successful response.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
          description: An unexpected error response.
      summary: ListShortcuts returns a list of shortcuts.
      tags:
        - ShortcutService
    post:
      operationId: ShortcutService_CreateShortcut
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/apiv1Shortcut"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1CreateShortcutResponse"
          description: A successful response.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
          description: An unexpected error response.
      summary: CreateShortcut creates a shortcut.
      tags:
        - ShortcutService
      x-codegen-request-body-name: shortcut
  /api/v1/shortcuts/{id}:
    delete:
      operationId: ShortcutService_DeleteShortcut
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1DeleteShortcutResponse"
          description: A successful response.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
          description: An unexpected error response.
      summary: DeleteShortcut deletes a shortcut by name.
      tags:
        - ShortcutService
    get:
      operationId: ShortcutService_GetShortcut
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1GetShortcutResponse"
          description: A successful response.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
          description: An unexpected error response.
      summary: GetShortcut returns a shortcut by id.
      tags:
        - ShortcutService
    put:
      operationId: ShortcutService_UpdateShortcut
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
        - in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                createdTime:
                  format: date-time
                  type: string
                creatorId:
                  format: int32
                  type: integer
                description:
                  type: string
                link:
                  type: string
                name:
                  type: string
                ogMetadata:
                  $ref: "#/components/schemas/apiv1OpenGraphMetadata"
                rowStatus:
                  $ref: "#/components/schemas/apiv1RowStatus"
                tags:
                  items:
                    type: string
                  type: array
                title:
                  type: string
                updatedTime:
                  format: date-time
                  type: string
                viewCount:
                  format: int32
                  type: integer
                visibility:
                  $ref: "#/components/schemas/apiv1Visibility"
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1UpdateShortcutResponse"
          description: A successful response.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
          description: An unexpected error response.
      summary: UpdateShortcut updates a shortcut.
      tags:
        - ShortcutService
      x-codegen-request-body-name: shortcut
  /api/v1/users:
    get:
      operationId: UserService_ListUsers
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ListUsersResponse"
          description: A successful response.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
          description: An unexpected error response.
      summary: ListUsers returns a list of users.
      tags:
        - UserService
    post:
      operationId: UserService_CreateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1User"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1CreateUserResponse"
          description: A successful response.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
          description: An unexpected error response.
      summary: CreateUser creates a new user.
      tags:
        - UserService
      x-codegen-request-body-name: user
  /api/v1/users/{id}:
    delete:
      operationId: UserService_DeleteUser
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1DeleteUserResponse"
          description: A successful response.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
          description: An unexpected error response.
      summary: DeleteUser deletes a user by id.
      tags:
        - UserService
    get:
      operationId: UserService_GetUser
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1GetUserResponse"
          description: A successful response.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
          description: An unexpected error response.
      summary: GetUser returns a user by id.
      tags:
        - UserService
  /api/v1/users/{id}/access_tokens:
    get:
      operationId: UserService_ListUserAccessTokens
      parameters:
        - description: id is the user id.
          in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ListUserAccessTokensResponse"
          description: A successful response.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
          description: An unexpected error response.
      summary: ListUserAccessTokens returns a list of access tokens for a user.
      tags:
        - UserService
    post:
      operationId: UserService_CreateUserAccessToken
      parameters:
        - description: id is the user id.
          in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserServiceCreateUserAccessTokenBody"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1CreateUserAccessTokenResponse"
          description: A successful response.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
          description: An unexpected error response.
      summary: CreateUserAccessToken creates a new access token for a user.
      tags:
        - UserService
      x-codegen-request-body-name: body
  /api/v1/users/{id}/access_tokens/{accessToken}:
    delete:
      operationId: UserService_DeleteUserAccessToken
      parameters:
        - description: id is the user id.
          in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
        - description: access_token is the access token to delete.
          in: path
          name: accessToken
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1DeleteUserAccessTokenResponse"
          description: A successful response.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
          description: An unexpected error response.
      summary: DeleteUserAccessToken deletes an access token for a user.
      tags:
        - UserService
  /api/v1/users/{id}/settings:
    get:
      operationId: UserSettingService_GetUserSetting
      parameters:
        - description: id is the user id.
          in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1GetUserSettingResponse"
          description: A successful response.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
          description: An unexpected error response.
      summary: GetUserSetting returns the user setting.
      tags:
        - UserSettingService
    patch:
      operationId: UserSettingService_UpdateUserSetting
      parameters:
        - description: id is the user id.
          in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/apiv1UserSetting"
        description: user_setting is the user setting to update.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1UpdateUserSettingResponse"
          description: A successful response.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
          description: An unexpected error response.
      summary: UpdateUserSetting updates the user setting.
      tags:
        - UserSettingService
      x-codegen-request-body-name: userSetting
  /api/v1/users/{userId}:
    patch:
      operationId: UserService_UpdateUser
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            format: int32
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                createdTime:
                  format: date-time
                  type: string
                email:
                  type: string
                nickname:
                  type: string
                password:
                  type: string
                role:
                  $ref: "#/components/schemas/v1Role"
                rowStatus:
                  $ref: "#/components/schemas/apiv1RowStatus"
                updatedTime:
                  format: date-time
                  type: string
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1UpdateUserResponse"
          description: A successful response.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
          description: An unexpected error response.
      tags:
        - UserService
      x-codegen-request-body-name: user
  /api/v1/workspace/profile:
    get:
      operationId: WorkspaceService_GetWorkspaceProfile
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1GetWorkspaceProfileResponse"
          description: A successful response.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
          description: An unexpected error response.
      tags:
        - WorkspaceService
  /api/v1/workspace/setting:
    get:
      operationId: WorkspaceService_GetWorkspaceSetting
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1GetWorkspaceSettingResponse"
          description: A successful response.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
          description: An unexpected error response.
      tags:
        - WorkspaceService
    patch:
      operationId: WorkspaceService_UpdateWorkspaceSetting
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/apiv1WorkspaceSetting"
        description: The user setting.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1UpdateWorkspaceSettingResponse"
          description: A successful response.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
          description: An unexpected error response.
      tags:
        - WorkspaceService
      x-codegen-request-body-name: setting
  /v1/subscription:
    get:
      operationId: SubscriptionService_GetSubscription
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1GetSubscriptionResponse"
          description: A successful response.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
          description: An unexpected error response.
      tags:
        - SubscriptionService
    patch:
      operationId: SubscriptionService_UpdateSubscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1UpdateSubscriptionRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1UpdateSubscriptionResponse"
          description: A successful response.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
          description: An unexpected error response.
      tags:
        - SubscriptionService
      x-codegen-request-body-name: body
security:
  - bearerAuth: []
servers:
  - url: https://slash.vpc.run
tags:
  - name: UserService
  - name: CollectionService
  - name: ShortcutService
  - name: SubscriptionService
  - name: UserSettingService
  - name: WorkspaceService
