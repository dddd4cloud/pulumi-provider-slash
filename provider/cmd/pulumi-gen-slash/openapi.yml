openapi: 3.1.0
info:
  title: slash
  version: 1.0.0
servers:
  - url: https://slash.vpc.run
    variables: {}
tags:
  - name: UserService
  - name: CollectionService
  - name: ShortcutService
  - name: SubscriptionService
  - name: UserSettingService
  - name: WorkspaceService
paths:
  /api/v1/collections:
    get:
      tags:
        - CollectionService
      summary: ListCollections returns a list of collections.
      operationId: CollectionService_ListCollections
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ListCollectionsResponse"
        "400":
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
    post:
      tags:
        - CollectionService
      summary: CreateCollection creates a collection.
      operationId: CollectionService_CreateCollection
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/apiv1Collection"
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1CreateCollectionResponse"
        "400":
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: collection
  /api/v1/collections/{collectionId}:
    put:
      tags:
        - CollectionService
      summary: UpdateCollection updates a collection.
      operationId: CollectionService_UpdateCollection
      parameters:
        - name: collectionId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: updateMask
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                creatorId:
                  type: integer
                  format: int32
                createdTime:
                  type: string
                  format: date-time
                updatedTime:
                  type: string
                  format: date-time
                name:
                  type: string
                title:
                  type: string
                description:
                  type: string
                shortcutIds:
                  type: array
                  items:
                    type: integer
                    format: int32
                visibility:
                  $ref: "#/components/schemas/apiv1Visibility"
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1UpdateCollectionResponse"
        "400":
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: collection
  /api/v1/collections/{id}:
    get:
      tags:
        - CollectionService
      summary: GetCollection returns a collection by id.
      operationId: CollectionService_GetCollection
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1GetCollectionResponse"
        "400":
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
    delete:
      tags:
        - CollectionService
      summary: DeleteCollection deletes a collection by id.
      operationId: CollectionService_DeleteCollection
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1DeleteCollectionResponse"
        "400":
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
  /api/v1/shortcuts:
    get:
      tags:
        - ShortcutService
      summary: ListShortcuts returns a list of shortcuts.
      operationId: ShortcutService_ListShortcuts
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ListShortcutsResponse"
        "400":
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
    post:
      tags:
        - ShortcutService
      summary: CreateShortcut creates a shortcut.
      operationId: ShortcutService_CreateShortcut
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/apiv1Shortcut"
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1CreateShortcutResponse"
        "400":
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: shortcut
  /api/v1/shortcuts/{id}:
    get:
      tags:
        - ShortcutService
      summary: GetShortcut returns a shortcut by id.
      operationId: ShortcutService_GetShortcut
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1GetShortcutResponse"
        "400":
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
    delete:
      tags:
        - ShortcutService
      summary: DeleteShortcut deletes a shortcut by name.
      operationId: ShortcutService_DeleteShortcut
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1DeleteShortcutResponse"
        "400":
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
  /api/v1/shortcuts/{id}/analytics:
    get:
      tags:
        - ShortcutService
      summary: GetShortcutAnalytics returns the analytics for a shortcut.
      operationId: ShortcutService_GetShortcutAnalytics
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1GetShortcutAnalyticsResponse"
        "400":
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
  /api/v1/shortcuts/{shortcutId}:
    put:
      tags:
        - ShortcutService
      summary: UpdateShortcut updates a shortcut.
      operationId: ShortcutService_UpdateShortcut
      parameters:
        - name: shortcutId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: updateMask
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                creatorId:
                  type: integer
                  format: int32
                createdTime:
                  type: string
                  format: date-time
                updatedTime:
                  type: string
                  format: date-time
                rowStatus:
                  $ref: "#/components/schemas/apiv1RowStatus"
                name:
                  type: string
                link:
                  type: string
                title:
                  type: string
                tags:
                  type: array
                  items:
                    type: string
                description:
                  type: string
                visibility:
                  $ref: "#/components/schemas/apiv1Visibility"
                viewCount:
                  type: integer
                  format: int32
                ogMetadata:
                  $ref: "#/components/schemas/apiv1OpenGraphMetadata"
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1UpdateShortcutResponse"
        "400":
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: shortcut
  /api/v1/users:
    get:
      tags:
        - UserService
      summary: ListUsers returns a list of users.
      operationId: UserService_ListUsers
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ListUsersResponse"
        "400":
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
    post:
      tags:
        - UserService
      summary: CreateUser creates a new user.
      operationId: UserService_CreateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1User"
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1CreateUserResponse"
        "400":
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: user
  /api/v1/users/{id}:
    get:
      tags:
        - UserService
      summary: GetUser returns a user by id.
      operationId: UserService_GetUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1GetUserResponse"
        "400":
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
    delete:
      tags:
        - UserService
      summary: DeleteUser deletes a user by id.
      operationId: UserService_DeleteUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1DeleteUserResponse"
        "400":
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
  /api/v1/users/{id}/access_tokens:
    get:
      tags:
        - UserService
      summary: ListUserAccessTokens returns a list of access tokens for a user.
      operationId: UserService_ListUserAccessTokens
      parameters:
        - name: id
          in: path
          description: id is the user id.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ListUserAccessTokensResponse"
        "400":
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
    post:
      tags:
        - UserService
      summary: CreateUserAccessToken creates a new access token for a user.
      operationId: UserService_CreateUserAccessToken
      parameters:
        - name: id
          in: path
          description: id is the user id.
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserServiceCreateUserAccessTokenBody"
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1CreateUserAccessTokenResponse"
        "400":
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  /api/v1/users/{id}/access_tokens/{accessToken}:
    delete:
      tags:
        - UserService
      summary: DeleteUserAccessToken deletes an access token for a user.
      operationId: UserService_DeleteUserAccessToken
      parameters:
        - name: id
          in: path
          description: id is the user id.
          required: true
          schema:
            type: integer
            format: int32
        - name: accessToken
          in: path
          description: access_token is the access token to delete.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1DeleteUserAccessTokenResponse"
        "400":
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
  /api/v1/users/{id}/settings:
    get:
      tags:
        - UserSettingService
      summary: GetUserSetting returns the user setting.
      operationId: UserSettingService_GetUserSetting
      parameters:
        - name: id
          in: path
          description: id is the user id.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1GetUserSettingResponse"
        "400":
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
    patch:
      tags:
        - UserSettingService
      summary: UpdateUserSetting updates the user setting.
      operationId: UserSettingService_UpdateUserSetting
      parameters:
        - name: id
          in: path
          description: id is the user id.
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: user_setting is the user setting to update.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/apiv1UserSetting"
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1UpdateUserSettingResponse"
        "400":
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: userSetting
  /api/v1/users/{userId}:
    patch:
      tags:
        - UserService
      operationId: UserService_UpdateUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                rowStatus:
                  $ref: "#/components/schemas/apiv1RowStatus"
                createdTime:
                  type: string
                  format: date-time
                updatedTime:
                  type: string
                  format: date-time
                role:
                  $ref: "#/components/schemas/v1Role"
                email:
                  type: string
                nickname:
                  type: string
                password:
                  type: string
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1UpdateUserResponse"
        "400":
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: user
  /api/v1/workspace/profile:
    get:
      tags:
        - WorkspaceService
      operationId: WorkspaceService_GetWorkspaceProfile
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1GetWorkspaceProfileResponse"
        "400":
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
  /api/v1/workspace/setting:
    get:
      tags:
        - WorkspaceService
      operationId: WorkspaceService_GetWorkspaceSetting
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1GetWorkspaceSettingResponse"
        "400":
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
    patch:
      tags:
        - WorkspaceService
      operationId: WorkspaceService_UpdateWorkspaceSetting
      requestBody:
        description: The user setting.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/apiv1WorkspaceSetting"
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1UpdateWorkspaceSettingResponse"
        "400":
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: setting
  /v1/subscription:
    get:
      tags:
        - SubscriptionService
      operationId: SubscriptionService_GetSubscription
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1GetSubscriptionResponse"
        "400":
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
    patch:
      tags:
        - SubscriptionService
      operationId: SubscriptionService_UpdateSubscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1UpdateSubscriptionRequest"
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1UpdateSubscriptionResponse"
        "400":
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
components:
  schemas:
    GetShortcutAnalyticsResponseAnalyticsItem:
      type: object
      properties:
        name:
          type: string
        count:
          type: integer
          format: int32
    UserServiceCreateUserAccessTokenBody:
      type: object
      properties:
        description:
          type: string
          description: description is the description of the access token.
        expiresAt:
          type: string
          description: |-
            expires_at is the expiration time of the access token.
            If expires_at is not set, the access token will never expire.
          format: date-time
    UserSettingColorTheme:
      type: string
      default: COLOR_THEME_UNSPECIFIED
      enum:
        - COLOR_THEME_UNSPECIFIED
        - COLOR_THEME_SYSTEM
        - COLOR_THEME_LIGHT
        - COLOR_THEME_DARK
    UserSettingLocale:
      type: string
      default: LOCALE_UNSPECIFIED
      enum:
        - LOCALE_UNSPECIFIED
        - LOCALE_EN
        - LOCALE_ZH
        - LOCALE_FR
    apiv1AutoBackupWorkspaceSetting:
      type: object
      properties:
        enabled:
          type: boolean
          description: Whether auto backup is enabled.
        cronExpression:
          type: string
          description: |-
            The cron expression for auto backup.
            For example, "0 0 0 * * *" means backup at 00:00:00 every day.
            See https://en.wikipedia.org/wiki/Cron for more details.
        maxKeep:
          type: integer
          description: The maximum number of backups to keep.
          format: int32
    apiv1Collection:
      type: object
      properties:
        id:
          type: integer
          format: int32
        creatorId:
          type: integer
          format: int32
        createdTime:
          type: string
          format: date-time
        updatedTime:
          type: string
          format: date-time
        name:
          type: string
        title:
          type: string
        description:
          type: string
        shortcutIds:
          type: array
          items:
            type: integer
            format: int32
        visibility:
          $ref: "#/components/schemas/apiv1Visibility"
    apiv1OpenGraphMetadata:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        image:
          type: string
    apiv1RowStatus:
      type: string
      default: ROW_STATUS_UNSPECIFIED
      enum:
        - ROW_STATUS_UNSPECIFIED
        - NORMAL
        - ARCHIVED
    apiv1Shortcut:
      type: object
      properties:
        id:
          type: integer
          format: int32
        creatorId:
          type: integer
          format: int32
        createdTime:
          type: string
          format: date-time
        updatedTime:
          type: string
          format: date-time
        rowStatus:
          $ref: "#/components/schemas/apiv1RowStatus"
        name:
          type: string
        link:
          type: string
        title:
          type: string
        tags:
          type: array
          items:
            type: string
        description:
          type: string
        visibility:
          $ref: "#/components/schemas/apiv1Visibility"
        viewCount:
          type: integer
          format: int32
        ogMetadata:
          $ref: "#/components/schemas/apiv1OpenGraphMetadata"
    apiv1UserSetting:
      type: object
      properties:
        id:
          type: integer
          description: id is the user id.
          format: int32
        locale:
          $ref: "#/components/schemas/UserSettingLocale"
        colorTheme:
          $ref: "#/components/schemas/UserSettingColorTheme"
    apiv1Visibility:
      type: string
      default: VISIBILITY_UNSPECIFIED
      enum:
        - VISIBILITY_UNSPECIFIED
        - PRIVATE
        - WORKSPACE
        - PUBLIC
    apiv1WorkspaceSetting:
      type: object
      properties:
        licenseKey:
          type: string
        enableSignup:
          type: boolean
          description: Whether to enable other users to sign up.
        instanceUrl:
          type: string
          description: The instance URL.
        customStyle:
          type: string
          description: The custom style.
        customScript:
          type: string
          description: The custom script.
        autoBackup:
          $ref: "#/components/schemas/apiv1AutoBackupWorkspaceSetting"
        defaultVisibility:
          $ref: "#/components/schemas/apiv1Visibility"
        faviconProvider:
          type: string
          description: The url of custom favicon provider.
    protobufAny:
      type: object
      properties:
        "@type":
          type: string
      additionalProperties:
        type: object
    rpcStatus:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        details:
          type: array
          items:
            $ref: "#/components/schemas/protobufAny"
    v1CreateCollectionResponse:
      type: object
      properties:
        collection:
          $ref: "#/components/schemas/apiv1Collection"
    v1CreateShortcutResponse:
      type: object
      properties:
        shortcut:
          $ref: "#/components/schemas/apiv1Shortcut"
    v1CreateUserAccessTokenResponse:
      type: object
      properties:
        accessToken:
          $ref: "#/components/schemas/v1UserAccessToken"
    v1CreateUserResponse:
      type: object
      properties:
        user:
          $ref: "#/components/schemas/v1User"
    v1DeleteCollectionResponse:
      type: object
    v1DeleteShortcutResponse:
      type: object
    v1DeleteUserAccessTokenResponse:
      type: object
    v1DeleteUserResponse:
      type: object
    v1GetCollectionResponse:
      type: object
      properties:
        collection:
          $ref: "#/components/schemas/apiv1Collection"
    v1GetShortcutAnalyticsResponse:
      type: object
      properties:
        references:
          type: array
          items:
            $ref: "#/components/schemas/GetShortcutAnalyticsResponseAnalyticsItem"
        devices:
          type: array
          items:
            $ref: "#/components/schemas/GetShortcutAnalyticsResponseAnalyticsItem"
        browsers:
          type: array
          items:
            $ref: "#/components/schemas/GetShortcutAnalyticsResponseAnalyticsItem"
    v1GetShortcutResponse:
      type: object
      properties:
        shortcut:
          $ref: "#/components/schemas/apiv1Shortcut"
    v1GetSubscriptionResponse:
      type: object
      properties:
        subscription:
          $ref: "#/components/schemas/v1Subscription"
    v1GetUserResponse:
      type: object
      properties:
        user:
          $ref: "#/components/schemas/v1User"
    v1GetUserSettingResponse:
      type: object
      properties:
        userSetting:
          $ref: "#/components/schemas/apiv1UserSetting"
    v1GetWorkspaceProfileResponse:
      type: object
      properties:
        profile:
          $ref: "#/components/schemas/v1WorkspaceProfile"
    v1GetWorkspaceSettingResponse:
      type: object
      properties:
        setting:
          $ref: "#/components/schemas/apiv1WorkspaceSetting"
    v1ListCollectionsResponse:
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: "#/components/schemas/apiv1Collection"
    v1ListShortcutsResponse:
      type: object
      properties:
        shortcuts:
          type: array
          items:
            $ref: "#/components/schemas/apiv1Shortcut"
    v1ListUserAccessTokensResponse:
      type: object
      properties:
        accessTokens:
          type: array
          items:
            $ref: "#/components/schemas/v1UserAccessToken"
    v1ListUsersResponse:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: "#/components/schemas/v1User"
    v1PlanType:
      type: string
      default: PLAN_TYPE_UNSPECIFIED
      enum:
        - PLAN_TYPE_UNSPECIFIED
        - FREE
        - PRO
    v1Role:
      type: string
      default: ROLE_UNSPECIFIED
      enum:
        - ROLE_UNSPECIFIED
        - ADMIN
        - USER
    v1Subscription:
      type: object
      properties:
        plan:
          $ref: "#/components/schemas/v1PlanType"
        startedTime:
          type: string
          format: date-time
          readOnly: true
        expiresTime:
          type: string
          format: date-time
          readOnly: true
    v1UpdateCollectionResponse:
      type: object
      properties:
        collection:
          $ref: "#/components/schemas/apiv1Collection"
    v1UpdateShortcutResponse:
      type: object
      properties:
        shortcut:
          $ref: "#/components/schemas/apiv1Shortcut"
    v1UpdateSubscriptionRequest:
      required:
        - licenseKey
      type: object
      properties:
        licenseKey:
          type: string
    v1UpdateSubscriptionResponse:
      type: object
      properties:
        subscription:
          $ref: "#/components/schemas/v1Subscription"
    v1UpdateUserResponse:
      type: object
      properties:
        user:
          $ref: "#/components/schemas/v1User"
    v1UpdateUserSettingResponse:
      type: object
      properties:
        userSetting:
          $ref: "#/components/schemas/apiv1UserSetting"
    v1UpdateWorkspaceSettingResponse:
      type: object
      properties:
        setting:
          $ref: "#/components/schemas/apiv1WorkspaceSetting"
    v1User:
      type: object
      properties:
        id:
          type: integer
          format: int32
        rowStatus:
          $ref: "#/components/schemas/apiv1RowStatus"
        createdTime:
          type: string
          format: date-time
        updatedTime:
          type: string
          format: date-time
        role:
          $ref: "#/components/schemas/v1Role"
        email:
          type: string
        nickname:
          type: string
        password:
          type: string
    v1UserAccessToken:
      type: object
      properties:
        accessToken:
          type: string
        description:
          type: string
        issuedAt:
          type: string
          format: date-time
        expiresAt:
          type: string
          format: date-time
    v1WorkspaceProfile:
      type: object
      properties:
        mode:
          type: string
          description: "Current workspace mode: dev, prod."
        version:
          type: string
          description: Current workspace version.
        plan:
          $ref: "#/components/schemas/v1PlanType"
        enableSignup:
          type: boolean
          description: Whether to enable other users to sign up.
        customStyle:
          type: string
          description: The custom style.
        customScript:
          type: string
          description: The custom script.
        faviconProvider:
          type: string
          description: The url of custom favicon provider.
        owner:
          title: |-
            The owner name.
            Format: "users/{id}"
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - bearerAuth: []
x-original-swagger-version: "2.0"
